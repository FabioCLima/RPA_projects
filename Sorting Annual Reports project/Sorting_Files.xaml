<Activity mc:Ignorable="sap sap2010" x:Class="Sorting_Files" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ArrayOfFiles" Type="InArgument(s:String[])" />
    <x:Property Name="in_out_AuxVar" Type="InOutArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1789.33333333333,2612.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>ArchiveLib</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>BalaReva.Zip</AssemblyReference>
      <AssemblyReference>UiPath.VMware.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="In this looping each one of the file inside the array of files will be use to sort into the desired folder depending upon  the name of the file." DisplayName="For Each: Looping to take all the files from the Folder and sort each one of them" sap:VirtualizedContainerService.HintSize="1678.66666666667,2508" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[in_ArrayOfFiles]">
    <ui:ForEach.Body>
      <ActivityAction x:TypeArguments="x:String">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1642,2349.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_74">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="HasNumbers" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="In this activity, using the string methods, the robot is taking one file name at time, for each step in the loop." DisplayName="Auxiliar variable for sorting files" sap:VirtualizedContainerService.HintSize="1600,124" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[in_out_AuxVar]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[item.ToString.Split("\"c).Last.ToString]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:IsMatch sap2010:Annotation.AnnotationText="In order to use regex to looking for a pattern to verify if the &quot;AuxVar&quot; - &quot;file's name&quot; has numbers on it, the robot create this boolean variable.&#xA;&#xA;Looking for 8 digits pattern - date format - MMDDYYYY" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="1600,170.666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_3" Input="[in_out_AuxVar]" IsBuilderTabModified="False" Pattern="\d{8}" RegexOption="IgnoreCase, Compiled" Result="[HasNumbers]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:IsMatch>
          <If sap2010:Annotation.AnnotationText="Checking if the file has pattern number - Date in its name. &#xA;condition &quot;hasNumbers&quot; in the file string name." Condition="[HasNumbers]" DisplayName="Checking if the file has numbers - Step 5" sap:VirtualizedContainerService.HintSize="1600,1882.66666666667" sap2010:WorkflowViewState.IdRef="If_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="HasNumbers sequence True" sap:VirtualizedContainerService.HintSize="1128,1683.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_72">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="MatchYear" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches sap2010:Annotation.AnnotationText="Checks if the Date pattern exists, then extract this pattern(MMDDYYYY), and extract the Year number using substring method." sap:VirtualizedContainerService.HintSize="1086,120.666666666667" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[in_out_AuxVar]" IsBuilderTabModified="False" Pattern="\d{4}.\w{3}" RegexOption="IgnoreCase, Compiled" Result="[MatchYear]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Matches>
                <If sap2010:Annotation.AnnotationText="Checking if the files has numbers in the part after &quot;Report_&quot;.If this is the case, the file has a date in its name, take the final four characters of the string -- Year. " Condition="[MatchYear.Count &gt; 0]" DisplayName="If - HasNumbers True Sequence" sap:VirtualizedContainerService.HintSize="1086,1430.66666666667" sap2010:WorkflowViewState.IdRef="If_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap2010:Annotation.AnnotationText="In this If activity, after the robot, check if the files HasNumbers on its name, it uses the regex to looking for the date pattern number and extract the Year, create the Year Folder and move the file to that Folder." DisplayName="If - HasNumbers True Sequence: pattern extraction" sap:VirtualizedContainerService.HintSize="940,1246" sap2010:WorkflowViewState.IdRef="Sequence_71">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="IsFolderExists" />
                        <Variable x:TypeArguments="x:String" Name="StrDate" />
                        <Variable x:TypeArguments="x:String" Name="StrYear" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="In this assign activity, the robot grab the Date string numbers" DisplayName="Grabing the Date string" sap:VirtualizedContainerService.HintSize="898,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_33">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[StrDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[MatchYear(0).Value]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="create variable StrYear to hold Year number from substring method on the numbers from previous step." DisplayName="Splitting the Date string numbers" sap:VirtualizedContainerService.HintSize="898,124" sap2010:WorkflowViewState.IdRef="Assign_34">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[StrYear]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strDate.Substring(StrDate.Length -4)]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <ui:PathExists sap2010:Annotation.AnnotationText="Check if the Year folder exists or not - boolean operation  on IsFolderExists variable" DisplayName="Path Exists" Exists="[IsFolderExists]" sap:VirtualizedContainerService.HintSize="898,136" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[&quot;C:\Users\FLI028\Desktop\RPA_projects\Sorting Annual Reports project\&quot;+StrYear]" PathType="Folder">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:PathExists>
                      <If sap2010:Annotation.AnnotationText="If the Year folder exist,&#xA;THEN: move the File to there.&#xA;ELSE: create the Year folder and move the File to the Year folder recently created" Condition="[IsFolderExists]" DisplayName="Move the file to the Year folder or create Year folder and move the file" sap:VirtualizedContainerService.HintSize="898,621.333333333333" sap2010:WorkflowViewState.IdRef="If_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="426,284.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_69">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MoveFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Moving the file to the already existed Year folder." Destination="[&quot;C:\Users\FLI028\Desktop\RPA_projects\Sorting Annual Reports project\&quot;+StrYear]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,192.666666666667" sap2010:WorkflowViewState.IdRef="MoveFile_12" Overwrite="True" Path="[&quot;nd340-c1-intro-to-uipath-rpa-project-starter-master\&quot; + in_out_AuxVar]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MoveFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="426,405.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_70">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Creating the Year folder step" DisplayName="Create the  Year Folder" sap:VirtualizedContainerService.HintSize="384,111.333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[&quot;C:\Users\FLI028\Desktop\RPA_projects\Sorting Annual Reports project\&quot;+StrYear]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CreateDirectory>
                            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;C:\Users\FLI028\Desktop\RPA_projects\Sorting Annual Reports project\&quot;+StrYear]" DisplayName="Moving the file to the newly created folder" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="MoveFile_13" Overwrite="True" Path="[&quot;nd340-c1-intro-to-uipath-rpa-project-starter-master\&quot; + in_out_AuxVar]" />
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else HasNumbers False " sap:VirtualizedContainerService.HintSize="426,679.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_73">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="currentDate" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="In this assign activity the robot uses datetime method to get the actual date from the system.&#xA;" DisplayName="getting the current date" sap:VirtualizedContainerService.HintSize="384,140.666666666667" sap2010:WorkflowViewState.IdRef="Assign_35">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[currentDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("MMddyyyy")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="creating the Folder with the variable created in the previous step to hold all the files there arent date pattern in the name." DisplayName="Create the Year Folder" sap:VirtualizedContainerService.HintSize="384,142.666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[&quot;C:\Users\FLI028\Desktop\RPA_projects\Sorting Annual Reports project\&quot;+currentDate]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CreateDirectory>
                <ui:MoveFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="After getting the system formatted date and created the Date Folders in the previous steps, the robot moves those files to this Folder." Destination="[&quot;C:\Users\FLI028\Desktop\RPA_projects\Sorting Annual Reports project\&quot;+currentDate]" DisplayName="Moving the files which has no date numbers" sap:VirtualizedContainerService.HintSize="384,224" sap2010:WorkflowViewState.IdRef="MoveFile_14" Overwrite="True" Path="[&quot;nd340-c1-intro-to-uipath-rpa-project-starter-master\&quot; + in_out_AuxVar]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MoveFile>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ActivityAction>
    </ui:ForEach.Body>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
  </ui:ForEach>
</Activity>